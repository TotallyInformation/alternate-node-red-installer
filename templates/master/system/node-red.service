# A TEMPLATE systemd service file for running Node-RED
# CHANGE the settings before use.
#
# Make sure that you replace all instances of <root-folder-name> with the actual
# absolute root path.
#
# See https://github.com/TotallyInformation/alternate-node-red-installer
#     https://gist.github.com/Belphemur/3f6d3bf211b0e8a18d93
#     http://www.freedesktop.org/wiki/Software/systemd/
#
# This file must be linked into the /etc/systemd/system/multi-user.target.wants/ folder:
#    1) Rename this file to have a unique name (in case you want other instances running)
#    2) sudo /bin/systemctl enable /home/<user>/<folder>/system/<filename>.service
#    3) sudo systemctl daemon-reload
#
# After installing or changing this file:
#    1) sudo systemctl daemon-reload
#
# Start manually with `sudo /bin/systemctl start <filename>`
# View logs with `sudo journalctl -u <filename>` (e.g. `sudo journalctl -u node-red`)
# View service status with `sudo systemctl status <filename>`
#
# VERSION: 3

#----------------------------------------------------------------------------#
# SECURITY NOTE:                                                             #
# There are MANY additional settings that should be considered for this file #
# if running in a production environment and ESPECIALLY if it is possible to #
# access Node-RED over the INTERNET.                                         #
# SELinux, Sandboxing and other limiting flags should be considered. See     # 
# https://www.freedesktop.org/software/systemd/man/systemd.exec.html         #
# for more details.                                                          #
#----------------------------------------------------------------------------#

[Unit]
Description=Node-Red Home Automation service
Documentation=https://github.com/TotallyInformation/alternate-node-red-installer http://nodered.org/docs

# Use the `systemd-analyze plot > something.svg` (or similar) command to produce a full dependency
# visual that will let you sensibly adjust these settings for your system.
# @see https://serverfault.com/a/617864/119582

# NB: Use the `systemd-analyze` command to understand the order of 
# Syslog, Networking must be active before starting - adjust to requirements
After=network.target
# Mosquitto (MQTT) & InfluxDB may be wanted - ADJUST to need
#Wants=mosquitto.service influxdb.service

[Service]
Type=simple

# User/Group that launches node-RED (it's advised to create a new user for Node-RED)
# You can do : sudo useradd node-red then change the User=pi to User=node-red
# If changing the user/group, make sure that ALL FILES and FOLDERS have the correct
# ownership before continuing.
User=pi
Group=pi

# -- Set any required environment variables - ADJUST these according to your installation --
#    Do not forget to change settings in ./data/envfile.ini as well
#    NOTE: No variable expansion is done.
#          Do not put credentials into environment variables - use LoadCredential or SetCredential

Environment="NODE_RED_EXE=<root-folder-name>/node_modules/node-red/red.js"
Environment="NODE_RED_OPTIONS=--userDir <root-folder-name>/data -v"

# Only when running on systems (like most Pi's) with 1GiB or less of RAM
# Comment out if you have plenty of RAM so that Node.js decides.
#Environment="NODE_OPTIONS=--max-old-space-size=128"
# Generally not needed any more, let Node.js manage things.
#Environment="NODE_OPTIONS=--max-old-space-size=512"

# Un-comment if needing proxy to get to external network
# Also see the httpServerOptions setting where you can tell node-red which incoming proxies to trust
#Environment="HTTP_PROXY=http://myproxy.com:8080"
#Environment="NO_PROXY=.acme.co,.acme.co.uk"

# Or use an environment variables file, overrides the Environment settings
# makes it nice and easy to change without having to edit this file.
# Ignored if file does not exist. Entries in file overwrite those above.
# @See https://www.freedesktop.org/software/systemd/man/systemd.exec.html#EnvironmentFile=
EnvironmentFile=-<root-folder-name>/data/envfile.ini

WorkingDirectory=<root-folder-name>

# PID file
PIDFile=<root-folder-name>/nrmain.pid

# Command that is started - for the alternate installer or other manually installed `npm install node-red`
# @see https://man7.org/linux/man-pages/man5/systemd.service.5.html#COMMAND_LINES for details
ExecStart=/usr/bin/node $NODE_OPTIONS $NODE_RED_EXE $NODE_RED_OPTIONS
# Command to start when using Dave's install script on a Pi
#ExecStart=/usr/bin/env node-red-pi $NODE_OPTIONS $NODE_RED_OPTIONS

# uncomment next line if you need to wait for time sync before starting
#ExecStartPre=/bin/bash -c '/bin/journalctl -b -u systemd-timesyncd | /bin/grep -q "systemd-timesyncd.* Synchronized to time server"'

# Guide the priority of the service - how "nice" it plays with other running tasks
# @see https://www.freedesktop.org/software/systemd/man/systemd.resource-control.html for additional settings
# including the ability to control swap use.
# Lower value is higher priority (-20 to 19, default=0)
#Nice=5

# Tag things in the log (goes to journal by default, access using the `journalctl` command)
SyslogIdentifier=Node-RED

# Make Node-RED restart if it fails
Restart=on-failure
RestartSec=20s  # Defaults to 100ms

# Node-RED needs a SIGINT to be notified to stop
KillSignal=SIGINT

# Prevent this service changing the OS or /etc
# @See https://www.freedesktop.org/software/systemd/man/systemd.exec.html#ProtectSystem=
ProtectSystem=full

[Install]
# Node-RED must be started before the following is triggered
WantedBy=multi-user.target

#EOF
